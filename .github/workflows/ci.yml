name: CI

on:
  push:
    # branches:
    #   - master
    paths-ignore:
      - '**/README.md'
      - '**/CHANGELOG.md'
      - 'deps-lock.json'
      - 'resources/CLOJURE_LSP_VERSION'
      - 'docs/**'
      - 'images/**'
      - 'mkdocs.yml'
      - '.github/workflows/bump_deps.yml'
      - '.github/workflows/bump_downstreams.yml'
      - '.github/workflows/nightly.yml'
      - '.github/workflows/docs.yml'
      - '.github/workflows/release.yml'

  pull_request:

jobs:
  # lint:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2.2.0
  #       with:
  #         fetch-depth: 0

  #     - name: Install Clojure
  #       uses: DeLaGuardo/setup-clojure@master
  #       with:
  #         cli: '1.10.3.1013'

  #     - name: Install Babashka
  #       run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      # - name: Compile java classes
      #   run: make classes

      # - name: Check if namespaces are clean
      #   run: make lint-clean

      # - name: Check if namespaces are formatted
      #   run: make lint-format

      # - name: Check if namespaces have no diagnostics
      #   run: make lint-diagnostics

  unit-test:
    runs-on: ${{matrix.os}}
#    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Install Clojure
        if: ${{ matrix.os != 'windows-latest' }}
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: 1.10.3.1013
          lein: 2.9.1
          bb: 0.8.157
          boot: 2.8.3

      # no boot on widnows with this action ...
      - name: Install Clojure (MS-Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: 1.10.3.1013
          lein: 2.9.1
          bb: 0.8.157

      - name: Install boot on MS-Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          $env:LOCAL_BIN_DIR="$HOME\.local\bin"

          if (!(Test-Path $env:LOCAL_BIN_DIR)) {new-item "$env:LOCAL_BIN_DIR" -ItemType directory}
          iwr -Uri https://github.com/boot-clj/boot-bin/releases/download/latest/boot.exe `
          -outfile $env:LOCAL_BIN_DIR/boot.exe
          echo $env:LOCAL_BIN_DIR | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          & "$env:LOCAL_BIN_DIR"/boot.exe

      - name: Run tests
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd lib
          clojure -M:test --focus clojure-lsp.classpath-test

      - name: Run tests (MS-Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          # lein -v
          # echo $Env:PATH
          # Get-Command lein
          # bb -e '(fs/which ""lein"")'
          # bb -e '(fs/which ""powershell"")'
          cd lib
          clojure -M:test --focus clojure-lsp.classpath-test

          
  # jvm-integration-test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       jdk: [8, 11, 15, 17]
  #   steps:
  #     - uses: actions/checkout@v2.2.0
  #       with:
  #         fetch-depth: 0

  #     - name: Set up JDK ${{ matrix.jdk }}
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ matrix.jdk }}

  #     - name: Install Clojure
  #       uses: DeLaGuardo/setup-clojure@master
  #       with:
  #         cli: '1.10.3.1013'

  #     - name: Install Babashka
  #       run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

  #     - name: Generate embedded binary
  #       run: make prod-cli

  #     - name: Run integration tests
  #       run: make integration-test

  #     - name: Run babashka pod tests
  #       run: make pod-test

  # graalvm-build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Prepare java
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 11

  #     - name: Install Clojure
  #       uses: DeLaGuardo/setup-clojure@master
  #       with:
  #         cli: '1.10.3.1013'

  #     - name: Install Babashka
  #       run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

  #     - uses: graalvm/setup-graalvm@v1
  #       with:
  #         version: '22.0.0.2'
  #         java-version: '11'
  #         components: 'native-image'
  #         native-image-musl: 'true'
  #         github-token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build Linux native image
  #       env:
  #         CLOJURE_LSP_XMX: "-J-Xmx6g"
  #         CLOJURE_LSP_STATIC: true
  #         CLOJURE_LSP_MUSL: true
  #       run: |
  #         make native-cli

  #     - name: Compress binary
  #       uses: svenstaro/upx-action@v2
  #       with:
  #         file: clojure-lsp

  #     - name: Upload
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: clojure-lsp-native
  #         path: clojure-lsp

  # graalvm-integration-test:
  #   needs: graalvm-build
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install Clojure
  #       uses: DeLaGuardo/setup-clojure@master
  #       with:
  #         cli: '1.10.3.1013'

  #     - name: Install Babashka
  #       run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

  #     - uses: actions/download-artifact@v2
  #       name: clojure-lsp-native

  #     - name: Setup binary
  #       run: |
  #         cp -rf clojure-lsp-native/clojure-lsp cli/clojure-lsp
  #         cp -rf clojure-lsp-native/clojure-lsp clojure-lsp
  #         chmod +x cli/clojure-lsp
  #         chmod +x clojure-lsp

  #     - name: Run babashka pod tests
  #       env:
  #         CLOJURE_LSP_TEST_ENV: native
  #       run: make pod-test

  #     - name: Run integration tests
  #       run: make integration-test
